# GENERATED FILE. Use with Kubernetes 1.7+
# TO UPDATE, modify files in install/kubernetes/templates and run install/updateVersion.sh
################################
# edgemicro system namespace
################################
apiVersion: v1
kind: Namespace
metadata:
  name: edgemicro-system
---
################################
# edgemicro RBAC
################################
# Permissions and roles for edgemicro
# To debug: start the cluster with -vmodule=rbac,3 to enable verbose logging on RBAC DENY
# Also helps to enable logging on apiserver 'wrap' to see the URLs.
# Each RBAC deny needs to be mapped into a rule for the role.
# If using minikube, start with '--extra-config=apiserver.Authorization.Mode=RBAC'

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: edgemicro-sidecar-injector-edgemicro-system
rules:
- apiGroups: ["*"]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: edgemicro-ca-edgemicro-system
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "get", "watch", "list", "update"]
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "watch", "list"]
---
# Permissions for the sidecar proxy.
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: edgemicro-sidecar-edgemicro-system
rules:
- apiGroups: ["extensions"]
  resources: ["thirdpartyresources", "ingresses"]
  verbs: ["get", "watch", "list", "update"]
- apiGroups: [""]
  resources: ["configmaps", "pods", "endpoints", "services"]
  verbs: ["get", "watch", "list"]
---
# Grant permissions to the Sidecar sidecar-injector
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: edgemicro-sidecar-injector-admin-role-binding-edgemicro-system
subjects:
- kind: ServiceAccount
  name: edgemicro-sidecar-injector-service-account
  namespace: edgemicro-system
roleRef:
  kind: ClusterRole
  name: edgemicro-sidecar-injector-edgemicro-system
  apiGroup: rbac.authorization.k8s.io
---
# Grant permissions to the CA.
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: edgemicro-ca-role-binding-edgemicro-system
subjects:
- kind: ServiceAccount
  name: edgemicro-ca-service-account
  namespace: edgemicro-system
roleRef:
  kind: ClusterRole
  name: edgemicro-ca-edgemicro-system
  apiGroup: rbac.authorization.k8s.io
---
# Grant permissions to the sidecar.
# TEMPORARY: the edgemicroctl should generate a separate service account for the proxy, and permission
# granted only to that account !
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: edgemicro-sidecar-role-binding-edgemicro-system
subjects:
- kind: ServiceAccount
  name: default
  namespace: edgemicro-system
roleRef:
  kind: ClusterRole
  name: edgemicro-sidecar-edgemicro-system
  apiGroup: rbac.authorization.k8s.io
---

kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: serviceroles.config.edgemicro.io
  labels:
    edgemicro: rbac
spec:
  group: config.edgemicro.io
  names:
    kind: ServiceRole
    plural: serviceroles
    singular: servicerole
  scope: Namespaced
  version: v1alpha2
---

kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: servicerolebindings.config.edgemicro.io
  labels:
    edgemicro: rbac
spec:
  group: config.edgemicro.io
  names:
    kind: ServiceRoleBinding
    plural: servicerolebindings
    singular: servicerolebinding
  scope: Namespaced
  version: v1alpha2
---

################################
# edgemicro configMap cluster-wide
################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: edgemicro
  namespace: edgemicro-system
data:
  mesh: |-
    # Uncomment the following line to enable mutual TLS between proxies
    # authPolicy: MUTUAL_TLS
    #
    # Edit this list to avoid using mTLS to connect to these services.
    # Typically, these are control services (e.g kubernetes API server) that don't have edgemicro sidecar
    # to transparently terminate mTLS authentication.
    mtlsExcludedServices: ["kubernetes.default.svc.cluster.local"]

    # Set the following variable to true to disable policy checks by the Mixer.
    # Note that metrics will still be reported to the Mixer.
    disablePolicyChecks: false
    # Set enableTracing to false to disable request tracing.
    enableTracing: true
    #
    # To disable the mixer completely (including metrics), comment out
    # the following lines
    mixerCheckServer: edgemicro-mixer.edgemicro-system:15004
    mixerReportServer: edgemicro-mixer.edgemicro-system:15004
    # This is the ingress service name, update if you used a different name
    ingressService: edgemicro-ingress
    #
    # Along with discoveryRefreshDelay, this setting determines how
    # frequently should Envoy fetch and update its internal configuration
    # from edgemicro Pilot. Lower refresh delay results in higher CPU
    # utilization and potential performance loss in exchange for faster
    # convergence. Tweak this value according to your setup.
    rdsRefreshDelay: 1s
    #
    defaultConfig:
      # NOTE: If you change any values in this section, make sure to make
      # the same changes in start up args in edgemicro-ingress pods.
      # See rdsRefreshDelay for explanation about this setting.
      discoveryRefreshDelay: 1s
      #
      # TCP connection timeout between Envoy & the application, and between Envoys.
      connectTimeout: 10s
      #
      ### ADVANCED SETTINGS #############
      # Where should envoy's configuration be stored in the edgemicro-proxy container
      configPath: "/etc/edgemicro/proxy"
      binaryPath: "/usr/local/bin/envoy"
      # The pseudo service name used for Envoy.
      serviceCluster: edgemicro-proxy
      # These settings that determine how long an old Envoy
      # process should be kept alive after an occasional reload.
      drainDuration: 45s
      parentShutdownDuration: 1m0s
      #
      # Port where Envoy listens (on local host) for admin commands
      # You can exec into the edgemicro-proxy container in a pod and
      # curl the admin port (curl http://localhost:15000/) to obtain
      # diagnostic information from Envoy. See
      # https://lyft.github.io/envoy/docs/operations/admin.html
      # for more details
      proxyAdminPort: 15000
      #
      # Address where edgemicro Pilot service is running
      discoveryAddress: edgemicro-pilot.edgemicro-system:15003
      #
      # Zipkin trace collector
      zipkinAddress: zipkin.edgemicro-system:9411
      #
      # Statsd metrics collector. edgemicro mixer exposes a UDP endpoint
      # to collect and convert statsd metrics into Prometheus metrics.
      statsdUdpAddress: edgemicro-mixer.edgemicro-system:9125
      # Uncomment the following line to enable mutual TLS authentication between
      # sidecars and edgemicro control plane.
      # controlPlaneAuthPolicy: MUTUAL_TLS

---

